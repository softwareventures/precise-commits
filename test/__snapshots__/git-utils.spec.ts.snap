// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`git-utils getDiffForFile() brand-new-json-file 1`] = `
"diff --git a/brand-new-json-file.json b/brand-new-json-file.json
new file mode 100644
index 0000000..f663bcc
--- /dev/null
+++ b/brand-new-json-file.json
@@ -0,0 +1,3 @@
+{
+    "foo": true
+}
\\ No newline at end of file"
`;

exports[`git-utils getDiffForFile() brand-new-jsx-file 1`] = `
"diff --git a/brand-new-jsx-file.jsx b/brand-new-jsx-file.jsx
new file mode 100644
index 0000000..ae72777
--- /dev/null
+++ b/brand-new-jsx-file.jsx
@@ -0,0 +1,21 @@
+function HelloWorld({greeting = "hello", greeted = '"World"', silent = false, onMouseOver,}) {
+
+    if(!greeting){return null};
+  
+       // TODO: Don't use random in render
+    let num = Math.floor (Math.random() * 1E+7).toString().replace(/\\.\\d+/ig, "")
+  
+    return <div className='HelloWorld' title={\`You are visitor number \${ num }\`} onMouseOver={onMouseOver}>
+  
+      <strong>{ greeting.slice( 0, 1 ).toUpperCase() + greeting.slice(1).toLowerCase() }</strong>
+      {greeting.endsWith(",") ? " " : <span style={{color: '\\grey'}}>", "</span> }
+      <em>
+      { greeted }
+      </em>
+      { (silent)
+        ? "."
+        : "!"}
+  
+      </div>;
+  
+  }
\\ No newline at end of file"
`;

exports[`git-utils getDiffForFile() broken 1`] = `
"diff --git a/broken.ts b/broken.ts
index c3ce682..fb3933a 100644
--- a/broken.ts
+++ b/broken.ts
@@ -3 +3 @@ export class ProductInventoryDataProvider implements DataSource<ProductInventory
-        T extends {customerId: number; categoryOverview?: CategorySummaryDto}
+        T extends {customerId: number; categoryOverview?: CategorySummaryDto | undefined}"
`;

exports[`git-utils getDiffForFile() changed-line-in-closure 1`] = `
"diff --git a/changed-line-in-closure.ts b/changed-line-in-closure.ts
index 6ad59aa..c61b8fb 100644
--- a/changed-line-in-closure.ts
+++ b/changed-line-in-closure.ts
@@ -3,0 +4,5 @@ import {waitFor} from 'wait-for'
+const failOnError = error => {
+    console.log("got error:", error);
+    fail(error);
+}
+
@@ -7,4 +12,5 @@ describe("salad sausage", () => {
-        repo.findAbc(
-            111,
-            Egg.fromText("nettle")
-        )
+        const subscription = repo.findAbc(
+                111,
+                Egg.fromText("nettle")
+        );
+        subscription
@@ -17,3 +23 @@ describe("salad sausage", () => {
-                error => {
-                    console.log("got error:", error);
-                },
+                failOnError,
@@ -22 +26 @@ describe("salad sausage", () => {
-                    console.log("finished");
+                    console.log("finished"); // TODO: winkle ankle cricket
@@ -24,0 +29,3 @@ describe("salad sausage", () => {
+        subscription.getEffects().subscribe(
+                effect => commandEffectsReceived.push(effect)
+        )
@@ -27,0 +35 @@ describe("salad sausage", () => {
+            expect(commandEffectsReceived).toBeEmpty();"
`;

exports[`git-utils getDiffForFile() empty-javascript-file 1`] = `
"diff --git a/empty-javascript-file.js b/empty-javascript-file.js
index e69de29..3772dd0 100644
--- a/empty-javascript-file.js
+++ b/empty-javascript-file.js
@@ -0,0 +1,2 @@
+var greeting = 'hello'
+        var audience = 'world'
\\ No newline at end of file"
`;

exports[`git-utils getDiffForFile() formatting-would-affect-total-line-count 1`] = `
"diff --git a/formatting-would-affect-total-line-count.js b/formatting-would-affect-total-line-count.js
index 4e74cec..5eda403 100644
--- a/formatting-would-affect-total-line-count.js
+++ b/formatting-would-affect-total-line-count.js
@@ -5 +5,2 @@ function myfunc(
-    b
+    b,
+    c
@@ -8,0 +10,2 @@ function myfunc(
+
+var newStatement = true"
`;

exports[`git-utils getDiffForFile() hunk-marker-in-code 1`] = `
"diff --git a/hunk-marker-in-code.ts b/hunk-marker-in-code.ts
index 1f462db..917655e 100644
--- a/hunk-marker-in-code.ts
+++ b/hunk-marker-in-code.ts
@@ -2,2 +2 @@ export function extractLineChangeData(diffData: string) {
-    const lineChanges = diffData.match(/@@.*@@/g);
-    return lineChanges;
+    return diffData.match(/@@.*@@/gu );"
`;

exports[`git-utils getDiffForFile() multiple-updated-lines-javascript-file 1`] = `
"diff --git a/multiple-updated-lines-javascript-file.js b/multiple-updated-lines-javascript-file.js
index 50d7ab7..2b98ecd 100644
--- a/multiple-updated-lines-javascript-file.js
+++ b/multiple-updated-lines-javascript-file.js
@@ -2 +2 @@ var     untouchedUglyLines1 = ''
-function TouchedFunctionSignature({greeting = "Hello", greeted = '"World"', silent = false,}) {
+function TouchedFunctionSignature({greeting = "Hello", greeted = '"Mars"', silent = false,}) {
@@ -5,0 +6 @@ function TouchedFunctionSignature({greeting = "Hello", greeted = '"World"', sile
+      const newlyAddedUglyLine = true
\\ No newline at end of file"
`;

exports[`git-utils getDiffForFile() single-updated-line-typescript 1`] = `
"diff --git a/single-updated-line-typescript.ts b/single-updated-line-typescript.ts
index 30011dc..1f5fc71 100644
--- a/single-updated-line-typescript.ts
+++ b/single-updated-line-typescript.ts
@@ -2 +2 @@ const a = true
-const b = false
\\ No newline at end of file
+const b = true
\\ No newline at end of file"
`;

exports[`git-utils getDiffForFile() updated-class-body 1`] = `
"diff --git a/updated-class-body.js b/updated-class-body.js
index 003605a..9eafeaf 100644
--- a/updated-class-body.js
+++ b/updated-class-body.js
@@ -2,2 +2,2 @@ class Hatstand {
-    constructor () {
-        this.hats = [];
+    constructor (hats) {
+        this.hats = hats ?? [ ];"
`;
